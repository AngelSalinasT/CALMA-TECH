#!/bin/bash

# CALMA TECH - Script de configuraci√≥n de Base de Datos
# Este script configura y levanta PostgreSQL usando Docker y Colima

set -e

echo "üöÄ CALMA TECH - Configuraci√≥n de Base de Datos"
echo "=============================================="
echo ""

# Colores para output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Verificar si Colima est√° instalado
if ! command -v colima &> /dev/null; then
    echo -e "${RED}‚ùå Colima no est√° instalado${NC}"
    echo "Instalar con: brew install colima"
    exit 1
fi

# Verificar si Docker est√° instalado
if ! command -v docker &> /dev/null; then
    echo -e "${RED}‚ùå Docker no est√° instalado${NC}"
    echo "Instalar con: brew install docker docker-compose"
    exit 1
fi

# Verificar si Colima est√° corriendo
if ! colima status &> /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  Colima no est√° corriendo. Iniciando...${NC}"
    colima start
    echo -e "${GREEN}‚úÖ Colima iniciado${NC}"
else
    echo -e "${GREEN}‚úÖ Colima ya est√° corriendo${NC}"
fi

# Verificar si el archivo docker-compose.yml existe
if [ ! -f "docker-compose.yml" ]; then
    echo -e "${RED}‚ùå docker-compose.yml no encontrado${NC}"
    echo "Aseg√∫rate de estar en el directorio ra√≠z del proyecto"
    exit 1
fi

# Levantar contenedores
echo ""
echo "üê≥ Levantando contenedores Docker..."
docker-compose up -d

# Esperar a que PostgreSQL est√© listo
echo ""
echo "‚è≥ Esperando a que PostgreSQL est√© listo..."
sleep 5

# Verificar que los contenedores est√©n corriendo
if docker ps | grep -q calmatech_postgres; then
    echo -e "${GREEN}‚úÖ PostgreSQL est√° corriendo${NC}"
else
    echo -e "${RED}‚ùå Error al iniciar PostgreSQL${NC}"
    docker-compose logs postgres
    exit 1
fi

# Crear archivo .env si no existe
if [ ! -f "backend/.env" ]; then
    echo ""
    echo "üìù Creando archivo backend/.env..."
    cp backend/.env.example backend/.env
    echo -e "${GREEN}‚úÖ Archivo backend/.env creado${NC}"
    echo -e "${YELLOW}‚ö†Ô∏è  Recuerda configurar tus API keys en backend/.env${NC}"
fi

# Mostrar informaci√≥n
echo ""
echo "=============================================="
echo -e "${GREEN}‚úÖ Base de datos configurada correctamente${NC}"
echo ""
echo "üìä Informaci√≥n de conexi√≥n:"
echo "  - Database: calmatech_db"
echo "  - User: calmatech_user"
echo "  - Password: calmatech_dev_password_2025"
echo "  - Host: localhost"
echo "  - Port: 5432"
echo ""
echo "üåê pgAdmin (UI):"
echo "  - URL: http://localhost:5050"
echo "  - Email: admin@calmatech.local"
echo "  - Password: admin123"
echo ""
echo "üîß Comandos √∫tiles:"
echo "  - Ver logs: docker-compose logs -f postgres"
echo "  - Detener: docker-compose down"
echo "  - Reiniciar: docker-compose restart"
echo "  - Conectar: docker exec -it calmatech_postgres psql -U calmatech_user -d calmatech_db"
echo ""
echo "üìö M√°s info en: DATABASE.md"
echo "=============================================="
